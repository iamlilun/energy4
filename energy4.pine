// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © M0rty

//@version=5

indicator(title='量能四根第一版-改', shorttitle='量能四根第一版-改', overlay=true)

//* -------------------------------
//* 十字星判斷
//* -------------------------------
C_Len = 10
C_ShadowPercent = 5.0
C_ShadowEqualsPercent = 100.0
C_DojiBodyPercent = 8.5
C_Factor = 2.0

C_BodyHi = math.max(close, open)
C_BodyLo = math.min(close, open)
C_Body = C_BodyHi - C_BodyLo
C_BodyAvg = ta.ema(C_Body, C_Len)
C_SmallBody = C_Body < C_BodyAvg
C_LongBody = C_Body > C_BodyAvg
C_UpShadow = high - C_BodyHi
C_DnShadow = C_BodyLo - low
C_HasUpShadow = C_UpShadow > C_ShadowPercent / 100 * C_Body
C_HasDnShadow = C_DnShadow > C_ShadowPercent / 100 * C_Body
C_WhiteBody = open < close
C_BlackBody = open > close
C_Range = high - low
C_IsInsideBar = C_BodyHi[1] > C_BodyHi and C_BodyLo[1] < C_BodyLo
C_BodyMiddle = C_Body / 2 + C_BodyLo
C_ShadowEquals = C_UpShadow == C_DnShadow or math.abs(C_UpShadow - C_DnShadow) / C_DnShadow * 100 < C_ShadowEqualsPercent and math.abs(C_DnShadow - C_UpShadow) / C_UpShadow * 100 < C_ShadowEqualsPercent
C_IsDojiBody = C_Range > 0 and C_Body <= C_Range * C_DojiBodyPercent / 100
C_Doji = C_IsDojiBody and C_ShadowEquals


C_DragonflyDoji = C_IsDojiBody and C_UpShadow <= C_Body
C_GravestoneDojiOne = C_IsDojiBody and C_DnShadow <= C_Body
is_Doji = C_Doji and not C_DragonflyDoji and not C_GravestoneDojiOne
/// ----- end 十字星判斷 -------------------


//* ---------------------------
//* 指標背離判斷..
//* ---------------------------

///
/// 定義指標樞軸
///

// Check if we get new Pivot High Or Pivot Low
int maxpp = 10 //樞軸判斷的長度..參考背離指標預設為10
int maxbars = 100 //判斷的bar長度..參考背離指標預設為100
int prd = 5 //樞軸長度..參考背離指標預設為5 
float ph = ta.pivothigh(close, prd, prd) //pivot high
float pl = ta.pivotlow(close, prd, prd) //pivot low
// plotshape(ph, text='H', style=shape.labeldown, color=color.new(color.white, 100), textcolor=color.new(color.red, 0), location=location.abovebar, offset=-prd)
// plotshape(pl, text='L', style=shape.labelup, color=color.new(color.white, 100), textcolor=color.new(color.lime, 0), location=location.belowbar, offset=-prd)

// keep values and positions of Pivot Highs/Lows in the arrays
int maxarraysize = 20 //max array size
var ph_positions = array.new_int(maxarraysize, 0)
var pl_positions = array.new_int(maxarraysize, 0)
var ph_vals = array.new_float(maxarraysize, 0.)
var pl_vals = array.new_float(maxarraysize, 0.)

// add PHs to the array
if ph
    //再array開頭插入樞軸高點的位置跟值
    array.unshift(ph_positions, bar_index)
    array.unshift(ph_vals, ph)

    //超過預定的最大值就刪掉最後一個
    if array.size(ph_positions) > maxarraysize
        array.pop(ph_positions)
        array.pop(ph_vals)

// add PLs to the array
if pl
    //再array開頭插入樞軸低點點的位置跟值
    array.unshift(pl_positions, bar_index)
    array.unshift(pl_vals, pl)

    //超過預定的最大值就刪掉最後一個
    if array.size(pl_positions) > maxarraysize
        array.pop(pl_positions)
        array.pop(pl_vals)

///
/// 判斷看漲背離
/// @param {series float}: src => indicator source
/// @param {int} oversold 底部超賣點位.
/// @return {int} divergence length
///
positive_divergence(src, oversold) =>
    divlen = 0 //背離長度

    prsc = close
    startpoint = 1  // don't check last candle 起始點..
    
    //確定收盤後才做判斷
    if barstate.isconfirmed
        // if indicators higher than last value and close price is higher than las close 
        // 指標值高於前一筆 或 收盤價高於前一筆
        if src > src[1] or close > close[1]   
            //搜尋15筆樞柚長度來看看有沒背離..maxpp預設10
            for x = 0 to maxpp - 1 by 1
                //要判斷長度(也是判斷點的index) = bar_index - 第x筆的樞軸低點index + 樞軸強度(預設5)
                len = bar_index - array.get(pl_positions, x) + prd
                // if we reach non valued array element or arrived 101. or previous bars then we don't search more
                // 樞軸低點index是0 或 判斷長度超過最大的K棒數(預設100)..就結束判斷
                if array.get(pl_positions, x) == 0 or len > maxbars
                    break
                // 判斷長度 > 5才做判斷
                // 判斷條件:
                //     指標的起始值 高於 判斷點的index值 & prsc的起始值 低於 低點樞柚值 & 指標起始值 跟 判斷點 都要低於 底部超賣點位(超出超賣線.)
                //     具體而言..src是判斷指標線的起幅..prsc是判斷K線的起幅
                //     如果低點指標往上..而K線往下則成為看漲背離
                if len > 5 and 
                   (
                       src[startpoint] > src[len] and 
                       prsc[startpoint] < nz(array.get(pl_vals, x)) and
                       src[startpoint] < oversold and
                       src[len] < oversold 
                   )
                    //計算指標斜率
                    slope1 = (src[startpoint] - src[len]) / (len - startpoint)
                    virtual_line1 = src[startpoint] - slope1
                    //計算收盤價斜率
                    slope2 = (close[startpoint] - close[len]) / (len - startpoint)
                    virtual_line2 = close[startpoint] - slope2
                    arrived = true
                    //判斷趨勢方向是否一致
                    for y = 1 + startpoint to len - 1 by 1
                        //指標值低於線段1 或 收盤價低於線段2..就不符合條件..
                        if src[y] < virtual_line1 or nz(close[y]) < virtual_line2
                            arrived := false
                            break
                        virtual_line1 -= slope1
                        virtual_line2 -= slope2
                    if arrived
                        divlen := len
                        break
    
    divlen

///
/// 判斷看跌背離
/// @param {series float}: src => indicator source
/// @param {int} overbought 頂部超買點位.
/// @return {int} divergence length
///
negative_divergence(src, overbought) =>
    divlen = 0
    prsc = close
    if barstate.isconfirmed
        // if indicators higher than last value and close price is higher than las close 
        // 指標值低於前一筆 或 收盤價低於前一筆
        if src < src[1] or close < close[1]
            startpoint = 1  // don't check last candle
            // we search last 15 PPs
            for x = 0 to maxpp - 1 by 1
                //計算當前的判斷長度(也是判斷點的index) = bar_index - 第x筆的樞軸高點index + 樞軸強度(預設5)
                len = bar_index - array.get(ph_positions, x) + prd

                // if we reach non valued array element or arrived 101. or previous bars then we don't search more
                 // 樞軸高點index是0 或 判斷長度超過最大的K棒數(預設100)..就結束判斷
                if array.get(ph_positions, x) == 0 or len > maxbars
                    break

                // 判斷長度 > 5才做判斷
                // 判斷條件:
                //    指標的起始值 低於 判斷點的index值 & prsc的起始值 高於 高點樞柚值 & 指標起始值 跟 判斷點 都要低於 底部超賣點位(超出超賣線.)
                //    具體而言..src是判斷指標線的起幅..prsc是判斷K線的起幅
                //    如果高點指標往下..而K線往上則成為看漲背離
                if len > 5 and 
                   (
                       src[startpoint] < src[len] and
                       prsc[startpoint] > nz(array.get(ph_vals, x)) and
                       src[startpoint] > overbought and
                       src[len] > overbought 
                   )
                    // label.new(bar_index, low - 50, text='LEN' + str.tostring(src[len]), color=#EA0000, textcolor=color.white, style=label.style_label_up)
                    //計算指標斜率
                    slope1 = (src[startpoint] - src[len]) / (len - startpoint)
                    virtual_line1 = src[startpoint] - slope1

                    //計算收盤價斜率
                    slope2 = (close[startpoint] - nz(close[len])) / (len - startpoint)
                    virtual_line2 = close[startpoint] - slope2

                    arrived = true
                    //判斷趨勢方向是否一致
                    for y = 1 + startpoint to len - 1 by 1
                        if src[y] > virtual_line1 or nz(close[y]) > virtual_line2
                            arrived := false
                            break
                        virtual_line1 -= slope1
                        virtual_line2 -= slope2

                    if arrived
                        divlen := len
                        break
    
    divlen

/// 
/// MFI 背離判斷
///
mfiLength = input.int(title="MFI Length", defval=14, minval=1, maxval=2000)
mfiSrc = hlc3
mf = ta.mfi(mfiSrc, mfiLength)
int mfiOverbought = 80
int mfiOversold = 20
bool isMfiPosDiv = positive_divergence(mf, mfiOversold) > 0 //判斷MFI是否看漲背離
bool isMfiNegDiv = negative_divergence(mf, mfiOverbought) > 0 //判斷MFI是否看跌背離
// plotshape(isMfiPosDiv, text='MFI P', style=shape.labelup, color=color.new(color.lime, 0), textcolor=color.new(color.black, 0), location=location.belowbar)
// plotshape(isMfiNegDiv, text='MFI N', style=shape.labeldown, color=color.new(color.red, 0), textcolor=color.new(color.black, 0), location=location.abovebar)

///
/// RVI 背離判斷
///
rviLength = input.int(10, minval=1), src = close
rviLen = 14
stddev = ta.stdev(src, rviLength)
rviUpper = ta.ema(ta.change(src) <= 0 ? 0 : stddev, rviLen)
rviLower = ta.ema(ta.change(src) > 0 ? 0 : stddev, rviLen)
rvi = rviUpper / (rviUpper + rviLower) * 100
int rviOverbought = 80
int rviOversold = 20
bool isRviPosDiv = positive_divergence(rvi, rviOversold) > 0 //判斷RVI是否看漲背離
bool isRviNegDiv = negative_divergence(rvi, rviOverbought) > 0 //判斷RVI是否看跌背離
// plotshape(isRviPosDiv, text='RVI P', style=shape.labelup, color=color.new(color.lime, 0), textcolor=color.new(color.black, 0), location=location.belowbar)
// plotshape(isRviNegDiv, text='RVI N', style=shape.labeldown, color=color.new(color.red, 0), textcolor=color.new(color.black, 0), location=location.abovebar)


///
/// RSI 背離判斷
///
rsiSrc = close
rsiLen = 14
rsiOverbought = 70
rsiOversold = 30
up = ta.rma(math.max(ta.change(src), 0), rsiLen)
down = ta.rma(-math.min(ta.change(src), 0), rsiLen)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - 100 / (1 + up / down) //計算RSI..
bool isRsiPosDiv = positive_divergence(rsi, rsiOversold) > 0 //判斷RSI是否看漲背離
bool isRsiNegDiv = negative_divergence(rsi, rsiOverbought) > 0 //判斷RSI是否看跌背離
// plotshape(isRsiPosDiv, text='RSI P', style=shape.labelup, color=color.new(color.lime, 0), textcolor=color.new(color.black, 0), location=location.belowbar)
// plotshape(isRsiNegDiv, text='RSI N', style=shape.labeldown, color=color.new(color.red, 0), textcolor=color.new(color.black, 0), location=location.abovebar)

///
/// OSC蔡金的漲跌判斷
///
var cmfCumVol = 0.
cmfCumVol += nz(volume)
if barstate.islast and cmfCumVol == 0
    runtime.error("No volume is provided by the data vendor.")
short = input.int(3, minval=1, title="OSC Fast Length")
long = input.int(10, minval=1, title="OSC Slow Length")
osc = ta.ema(ta.accdist, short) - ta.ema(ta.accdist, long)
bool isOscPos = ta.crossover(osc, 0)  //判斷OSC是否看漲
bool isOscNeg = ta.crossunder(osc, 0) //判斷OSC是否看跌
// plotshape(isOscPos, text='OSC P', style=shape.labelup, color=color.new(color.lime, 0), textcolor=color.new(color.black, 0), location=location.belowbar)
// plotshape(isOscNeg, text='OSC N', style=shape.labeldown, color=color.new(color.red, 0), textcolor=color.new(color.black, 0), location=location.abovebar)


///
/// OBV 漲跌判斷
///
var obvCumVol = 0.
obvCumVol += nz(volume)
if barstate.islast and obvCumVol == 0
    runtime.error("No volume is provided by the data vendor.")
obvSrc = close
obv = ta.cum(math.sign(ta.change(obvSrc)) * volume)
bool isObvPos = ta.crossover(obv, 0) //判斷obv是否看漲
bool isObvNeg = ta.crossunder(obv, 0) //判斷obv是否看跌
// plotshape(isObvPos, text='OBV P', style=shape.labelup, color=color.new(color.lime, 0), textcolor=color.new(color.black, 0), location=location.belowbar)
// plotshape(isObvNeg, text='OBV N', style=shape.labeldown, color=color.new(color.red, 0), textcolor=color.new(color.black, 0), location=location.abovebar)


//* -------------------------------
//* 漲勢強度條件判斷 
//* -------------------------------

//長下影線定義..高過全長55%
C_LongLowerShadowPercent = 55.0
C_LongLowerShadowBullish = C_DnShadow > C_Range / 100 * C_LongLowerShadowPercent

//長上影線定義..高過全長55%就算
C_LongShadowPercent = 55.0 
C_LongUpperShadowBearish = C_UpShadow > C_Range / 100 * C_LongShadowPercent

//強漲: 陽線實體 + 長下影線或長實體..
is_Bullish_strong = C_WhiteBody and (C_LongLowerShadowBullish or C_LongBody) 

//弱漲: 陽線實體或長下影線 + 實體長度高過上影線45%(短上影線) 或 實體長度低於上影線55%(短實體略長上影線)..這裡怪怪的但WTT源碼是這樣寫沒錯
is_Bullish_weak = C_LongLowerShadowBullish or (C_WhiteBody and (C_Body >= 0.45 * C_UpShadow or C_Body <= 0.55 * C_UpShadow))

//強跌: 陰線實體 + 長上影線或長實體
is_Bearish_strong = C_BlackBody and (C_LongUpperShadowBearish or C_LongBody)

//弱跌: 陰線實體或長上影線 + 實體長度高過上影線45%(短上影線) 或 實體長度低於上影線55%(短實體略長上影線)..這裡怪怪的但WTT源碼是這樣寫沒錯
is_Bearish_weak = C_LongUpperShadowBearish or (C_BlackBody and (C_Body >= 0.45 * C_UpShadow or C_Body <= 0.55 * C_UpShadow))

/// ------- end 漲勢強度條件判斷 --------------


//* -------------------------------
//* 漲跌權重判斷 
//* -------------------------------

strong_volume_weighting_factor = 0.8 //強權重指標
weak_volume_weighting_factor = 0.4 //弱權重指標
neutral_volume_weighting_factor = 1 //中立權重指標

//漲勢判斷..
//呈現弱跌..權重為0.6..不然為1
weight_bullish = is_Bearish_weak ? 1 - weak_volume_weighting_factor : neutral_volume_weighting_factor

//呈現弱漲..權重為1.4
weight_bullish := is_Bullish_weak ? 1 + weak_volume_weighting_factor : weight_bullish

//呈現強跌..權重為0.2
weight_bullish := is_Bearish_strong ? 1 - strong_volume_weighting_factor : weight_bullish

//呈現強漲..權重為1.8
weight_bullish := is_Bullish_strong ? 1 + strong_volume_weighting_factor : weight_bullish

//呈現mfi背離30%
weight_bullish := isMfiPosDiv ? weight_bullish + 3 : 
   isMfiNegDiv ? weight_bullish - 3 : weight_bullish

//呈現rvi背離30%
weight_bullish := isRviPosDiv ? weight_bullish + 3 : 
   isRviNegDiv ? weight_bullish - 3 : weight_bullish

//呈現rsi背離18%
weight_bullish := isRsiPosDiv ? weight_bullish + 1.8 : 
   isRsiNegDiv ? weight_bullish - 1.8 : weight_bullish

//呈現osc看漲或看跌11%
weight_bullish := isOscPos ? weight_bullish + 1.1 : 
   isOscNeg ? weight_bullish - 1.1 : weight_bullish

//呈現obv看漲或看跌11%
weight_bullish := isObvPos ? weight_bullish + 1.1 : 
   isObvNeg ? weight_bullish - 1.1 : weight_bullish

//如果是十字星..權重變回1..
weight_bullish := is_Doji ? neutral_volume_weighting_factor : weight_bullish

//--

//弱勢判斷..
//呈現弱跌..權重為1.4..不然為1
weight_bearish = is_Bearish_weak ? 1 + weak_volume_weighting_factor : neutral_volume_weighting_factor

//呈現弱漲..權重為0.6
weight_bearish := is_Bullish_weak ? 1 - weak_volume_weighting_factor : weight_bearish

//呈現強跌..權重為1.8
weight_bearish := is_Bearish_strong ? 1 + strong_volume_weighting_factor : weight_bearish

//呈現強漲..權重為0.2
weight_bearish := is_Bullish_strong ? 1 - strong_volume_weighting_factor : weight_bearish

//呈現mfi背離30%
weight_bearish := isMfiPosDiv ? weight_bearish - 3 : 
   isMfiNegDiv ? weight_bearish + 3 : weight_bearish

//呈現rvi背離30%
weight_bearish := isRviPosDiv ? weight_bearish - 3 : 
   isRviNegDiv ? weight_bearish + 3 : weight_bearish

//呈現rsi背離18%
weight_bearish := isRsiPosDiv ? weight_bearish - 1.8 : 
   isRsiNegDiv ? weight_bearish + 1.8 : weight_bearish

//呈現osc看漲或看跌11%
weight_bearish := isOscPos ? weight_bearish - 1.1 : 
   isOscNeg ? weight_bearish + 1.1 : weight_bearish

//呈現obv看漲或看跌11%
weight_bearish := isObvPos ? weight_bearish - 1.1 : 
   isObvNeg ? weight_bearish + 1.1 : weight_bearish

//呈現十字星..權重變回1.
weight_bearish := is_Doji ? neutral_volume_weighting_factor : weight_bearish

//權重結算..成交量 * 漲跌權重
volume_bullish = volume * weight_bullish
volume_bearish = volume * weight_bearish

/// ------- end 漲跌權重判斷 --------------

//* -------------------------------
//* 下單判斷
//* -------------------------------

//用權重計算SMA..5根...這裡設成false還走的下去嗎@@？？..
showTrend = true
trend_ma_length = 5
bullish_sma = showTrend ? ta.sma(volume_bullish, trend_ma_length) : na //漲勢sma
bearish_sma = showTrend ? ta.sma(volume_bearish, trend_ma_length) : na //跌勢sma

plan = bullish_sma / bullish_sma[3]
plan1 = bearish_sma / bearish_sma[3]
planup = bullish_sma / bearish_sma
plandown = bearish_sma / bullish_sma

length = 12
lower = ta.lowest(length) //12根最低價
upper = ta.highest(length) //12天最高價
middle = (lower + upper) * 0.495 //漲勢中間價位
middle1 = (lower + upper) * 0.505 //跌勢中間價位

///判斷多單條件
//前一根漲勢sma > 前三根漲勢sma
//這一根漲勢sma / 前三根漲勢sma >= 1.4
//這一根漲勢sma / 這一根跌勢sma >= 1
//前一筆rsi < 這一筆rsi
//12根最低價 / 最近3根最低價 > 0.995
//這一根開盤價 > 漲勢中間價
upup = bullish_sma[1] > bullish_sma[2] 
   and plan >= 1.4 
   and planup >= 1 
   and rsi[1] < rsi 
   and (lower / low > 0.992 or lower / low[1] > 0.992 or lower / low[2] > 0.995) 
   and open < middle

///判斷空單條件
//前一根跌勢sma > 前三根跌勢sma
//這一根跌勢sma / 前三根跌勢sma >= 1.4
//這一根跌勢sma / 這一根漲勢sma >= 1
//前一筆rsi < 這一筆rsi
//12根最高價 / 最近3根最高價 > 0.992
//這一根開盤價 > 跌勢中間價
downdown = bearish_sma[1] > bearish_sma[2]
   and plan1 >= 1.4 and 
   plandown >= 1 and 
   rsi[1] > rsi and 
   (high / upper > 0.992 or high[1] / upper > 0.992 or high[2] / upper > 0.992)
   and open > middle1

//這一根條件達到而上一根未達到(不連續)..才下單
upup1 = upup == true and upup[1] != true
downdown1 = downdown == true and downdown[1] != true

plotshape(upup1, style=shape.labelup, color=color.green, location=location.belowbar, size=size.small, text='多', textcolor=color.new(color.white, 0), title='多')
plotshape(downdown1, style=shape.labeldown, color=color.red, location=location.abovebar, size=size.small, text='空', textcolor=color.new(color.white, 0), title='空')

alertcondition(downdown1, title='空', message='量做空瞜')
alertcondition(upup1, title='多', message='量做多瞜')
